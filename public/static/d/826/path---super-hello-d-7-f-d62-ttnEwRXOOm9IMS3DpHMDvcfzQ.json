{"data":{"site":{"siteMetadata":{"title":"GatsbyJS Hello","author":"diescake"}},"markdownRemark":{"id":"db85fcd6-5294-5c14-9c79-9af801ed830d","excerpt":"去年の反省の 1 つであるが、一般的なパラレルに開発して上がってきた PR をコードレビューしてマージするという開発スタイルにあらゆる意味で限界を感じていて、ペアプロ、あるいはモブプロを取り入れるべく検討していた。早速 Discord で頼れる有識者達に相談してみたところ、WEB+DB PRESS…","html":"<p>去年の反省の 1 つであるが、一般的なパラレルに開発して上がってきた PR をコードレビューしてマージするという開発スタイルにあらゆる意味で限界を感じていて、ペアプロ、あるいはモブプロを取り入れるべく検討していた。</p>\n<p>早速 Discord で頼れる有識者達に相談してみたところ、WEB+DB PRESS の特集を紹介いただき読んでみた。関係者間で要点をシェアするためのメモとして本記事を書いている。実際に実施して適宜加筆していきたい。</p>\n<ul>\n<li>\n<p>WEB+DB PRESS Vol.102 (2018/1 月号)</p>\n<ul>\n<li>はじめてのペアプロ / モブプロ</li>\n</ul>\n</li>\n</ul>\n<p>[https://gihyo.jp/magazine/wdpress/archive/2018/vol102:embed:cite]</p>\n<p>[:contents]</p>\n<h1>ペアプロ</h1>\n<h2>効果的なタイミング</h2>\n<ul>\n<li>\n<p>新メンバーがジョインしたとき</p>\n<ul>\n<li>キャッチアップする最速の方法</li>\n</ul>\n</li>\n<li>新機能を実装するとき</li>\n<li>\n<p>デバッグや不具合修正を行うとき</p>\n<ul>\n<li>複数の観点によってデグレ防止に有効</li>\n</ul>\n</li>\n<li>\n<p>定期開催</p>\n<ul>\n<li>Daily / Weekly</li>\n<li>Daily なら 1h, Weekly なら 3h とか</li>\n</ul>\n</li>\n<li>技術的負債の返済日</li>\n</ul>\n<h2>進め方</h2>\n<h3>1. コードを書く前に方向づけを行う</h3>\n<ul>\n<li>最終目標を決める</li>\n<li>\n<p>作業項目をリストにする</p>\n<ul>\n<li>開発中も都度更新していく</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"md\"><pre class=\"language-md\"><code class=\"language-md\"><span class=\"token code keyword\">    - [x] 新規画面の追加</span>\n<span class=\"token code keyword\">    - [ ] データ取得 API の呼び出しと表示</span>\n<span class=\"token code keyword\">    - [ ] CSS を書いてデザインを実装</span>\n<span class=\"token code keyword\">    - [ ] リファクタリング</span>\n<span class=\"token code keyword\">    - [ ] 動作検証</span></code></pre></div>\n<ul>\n<li>\n<p>最初の目標を決める</p>\n<ul>\n<li>リスト化して作業を開始</li>\n<li>小さい作業項目から着手して流れを作るのがよい</li>\n</ul>\n</li>\n</ul>\n<h3>2. コードを書きながら会話し、考えを共有する</h3>\n<ul>\n<li>\n<p>ドライバー</p>\n<ul>\n<li>考えていることを口に出す</li>\n<li>実況のように、よく喋ることが重要</li>\n<li>思考をそのまま口にする</li>\n</ul>\n</li>\n<li>\n<p>ナビゲーター</p>\n<ul>\n<li>よく聞き、ドライバーを支える</li>\n<li>実況に対してコメント、評価、盛り上げる</li>\n<li>同時にコードレビュー</li>\n<li>立ち止まって設計の共有</li>\n<li>視野を広く持つことが大事</li>\n</ul>\n</li>\n</ul>\n<h3>3. ロールを交代する</h3>\n<p>ドライバーの方が消耗が激しいため、ローテーションするのが基本</p>\n<ul>\n<li>\n<p>時間で交代する</p>\n<ul>\n<li>15 分くらいの交代が目安</li>\n</ul>\n</li>\n<li>\n<p>ステップで交代する</p>\n<ul>\n<li>Pair Programming Ping Pong Pattern</li>\n<li>作業項目単位での交代</li>\n</ul>\n</li>\n<li>\n<p>適宜自由に交代する</p>\n<ul>\n<li>ある程度慣れた人向け</li>\n</ul>\n</li>\n</ul>\n<h2>注意点・コツ</h2>\n<ul>\n<li>ドライバーの正面にキーボードを置く</li>\n<li>\n<p>定期的に休憩を取る</p>\n<ul>\n<li>ロール交代の際に適宜取ると良い</li>\n</ul>\n</li>\n<li>\n<p>開発環境差異の問題</p>\n<ul>\n<li>非常に悩ましく、完全な解決方法はない。下記はいずれも対策の一例</li>\n<li>各自キーボードを持ち寄る</li>\n<li>チームメンバーでエディタ、環境を統一してしまう</li>\n<li>ペアプロ用にデフォルト設定の環境を別途用意する</li>\n<li>リアルタイム共同編集機能を持つエディタを利用する</li>\n<li>ペアプロの最終型。これが可能であればベストだがエディタを揃える必要があるか？</li>\n<li>同時に編集できなくとも、ツリーをファイルサーバ上に配置したり、dropbox を利用する等でリアルタイムにソースコードを共有して PC をスイッチしやすくするのはどうか？(IMHO)</li>\n<li>ステップで交代する場合は <code class=\"language-text\">push / pull</code> してドライバーの PC にスイッチするのはどうだろうか？(IMHO)</li>\n</ul>\n</li>\n<li>\n<p>メンタル的にペアプロが合わない人もいる</p>\n<ul>\n<li>強要してペアプロハラスメントに陥らないこと</li>\n<li>ただし、単に食わず嫌いの人は多い</li>\n</ul>\n</li>\n</ul>\n<h1>モブプロ</h1>\n<p>ペアプロでは、ペア以外のチームメンバーへ情報が伝達されにくいという問題がある。例えば、チケットや PR に試行内容とその結果、コードレビューのやり取り等が残らない。<strong>よし、ならば全員同席だ。</strong> ➔ モブプロ</p>\n<ul>\n<li>3〜5 人が適正</li>\n<li>\n<p>できる限り大画面を用意する</p>\n<ul>\n<li>調べ物用の PC がもう 1 台あると良い</li>\n</ul>\n</li>\n<li>ナビゲーターそれぞれが課題を調査する</li>\n</ul>\n<p>正直なところ、ペアプロほどメリットがスッと頭に入ってこなかったが、とりあえずやってみて考える。</p>","frontmatter":{"title":"「はじめてのペアプロ / モブプロ」を読んだメモ","date":"May 01, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/super-hello/","previous":{"fields":{"slug":"/hi-folks/"},"frontmatter":{"title":"New Beginnings"}},"next":null}}